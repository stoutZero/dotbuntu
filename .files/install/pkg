#!/usr/bin/env zsh

# shellcheck disable=SC1090
source ~/.files/functions.sh

# shellcheck disable=SC1090
source ~/.files/_install_funcs.sh

_info 'installing essential packages'

release="$(get_release)"
release_name="$(get_release_name)"

arch="$(get_arch)"

bindir=/usr/local/bin

cd /tmp/ || exit

pkgs="software-properties-common \
bzip2 \
curl \
dnsutils \
gzip \
htop \
nano \
traceroute \
tree \
wget \
whois \
zip \
"

pkgs="$(echo "$pkgs" | tr -d '\n')"

_apt="sudo apt install -y ${pkgs}"

echo "$_apt"
eval "$_apt > /dev/null 2>&1"

if [ ! -f "/etc/apt/sources.list.d/git-core-ubuntu-ppa-${release_name}.list" ]; then
  _info 'adding: ppa:git-core/ppa'
  sudo add-apt-repository -y ppa:git-core/ppa > /dev/null 2>&1
  _info 'added: ppa:git-core/ppa'
fi

if (( $(check_ppa 'githubcli') < 1)); then
  install_keyring

  gpg_name="githubcli-archive-keyring.gpg"
  gpg_path="/etc/apt/keyrings/$gpg_name"

  curl --connect-timeout 2 --silent --head --fail \
    "https://cli.github.com/packages/$gpg_name" > /dev/null 2>&1

  if [ $? -eq 0 ]; then
    _info 'adding: gh-cli repo'

    sudo wget -qO- "/etc/apt/keyrings/$gpg_name" \
      "https://cli.github.com/packages/$gpg_name" \
       > /dev/null 2>&1

    sudo chmod go+r $gpg_path
    
    echo "deb [arch=$arch signed-by=$gpg_path] https://cli.github.com/packages stable main" \
      | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null

    sudo chmod go+r /etc/apt/sources.list.d/github-cli.list

    sudo apt update > /dev/null 2>&1

    _info 'added: gh-cli repo'
  else
    _error "can't install gh-cli, can't seem to connect to cli.github.com"
  fi
fi

pkgs="fail2ban \
git \
jq \
redis-server \
unhide \
zstd \
gh \
"

pkgs="$(echo "$pkgs" | tr -d '\n')"

_apt="sudo apt install -y ${pkgs}"

echo "$_apt"
eval "$_apt > /dev/null 2>&1"

if ! command -v broot > /dev/null 2>&1; then
  _info 'installing: ctop'

  curl --silent -OL \
    https://dystroy.org/broot/download/x86_64-linux/broot
  sudo mv broot /usr/local/bin > /dev/null 2>&1
  sudo chmod a+x /usr/local/bin/broot > /dev/null 2>&1

  _info 'installed: ctop'
fi

if command -v broot > /dev/null 2>&1 ; then
  # shellcheck disable=SC2016
  echo '# generated from: `broot --print-shell-function zsh` ' \
    >> ~/.files/extra.sh
  broot --print-shell-function zsh >> ~/.files/extra.sh
fi

if ! command -v micro > /dev/null 2>&1 ; then
  _info 'installing: micro'

  curl -sSL https://getmic.ro | bash > /dev/null 2>&1

  sudo mv ./micro /usr/local/bin > /dev/null 2>&1
  sudo chown root: /usr/local/bin/micro > /dev/null 2>&1

  _info "micro installed to: "$(command -v micro)""

  _info 'installed: micro'
fi


if ! command -v fzf > /dev/null 2>&1 ; then
  _info 'installing: fzf'

  repo=https://github.com/junegunn/fzf
  v="$(gh_latest "$repo")"

  wget -qO \
    "$repo/releases/download/${v}/fzf-${v}-linux_${arch}.tar.gz" \
     > /dev/null 2>&1

  tar xzf "fzf-${v}-linux_${arch}.tar.gz" > /dev/null 2>&1

  sudo mv ./fzf /usr/local/bin > /dev/null 2>&1
  sudo chown root: /usr/local/bin/fzf > /dev/null 2>&1
  sudo chown a+x /usr/local/bin/fzf > /dev/null 2>&1

  _info "fzf installed to: "$(command -v fzf)""

  _info 'installed: fzf'
fi

if ! command -v bat > /dev/null 2>&1 ; then
  _info 'installing: bat'

  repo=https://github.com/sharkdp/bat

  v=$(gh_dl $repo "*_${arch}.deb")

  patt="bat_${v}_${arch}.deb"

  sudo dpkg -i "$patt" > /dev/null 2>&1

  rm -f "$patt" > /dev/null 2>&1

  _info "bat installed to: "$(command -v bat)""

  _info 'installed: bat'
fi

if [ ! -f "$bindir/sysz" ]; then
  wget -qO "$bindir/sysz" \
    https://github.com/joehillen/sysz/releases/latest/download/sysz \
      > /dev/null 2>&1

  sudo chmod a+x "$bindir/sysz" > /dev/null 2>&1

  _info "sysz installed to: "$(command -v sysz)""

  _info "installed: https://github.com/joehillen/sysz"
fi

if [ ! -f "$bindir/yq" ]; then
  _info 'installing: yq'

  repo=https://github.com/mikefarah/yq

  v="$(gh_latest "$repo")"

  sudo wget -qO "$bindir/yq" \
    "$repo/releases/download/v${v}/yq_linux_amd64" \
     > /dev/null 2>&1

  sudo chmod a+x "$bindir/yq" > /dev/null 2>&1

  _info "yq installed to: "$(command -v yq)""

  _info 'installed: yq'
fi

_info 'essential packages installed'
